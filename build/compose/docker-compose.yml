version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: iam-postgres
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 8.8.4.4
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-iam}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-iam_password}
      POSTGRES_DB: ${POSTGRES_DB:-iam}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iam"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis service (T015)
  redis:
    image: redis:7-alpine
    container_name: iam-redis
    restart: unless-stopped
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        if [ -n "${REDIS_PASSWORD}" ]; then
          exec redis-server --requirepass "${REDIS_PASSWORD}";
        else
          exec redis-server;
        fi
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "if [ -n \"${REDIS_PASSWORD}\" ]; then redis-cli -a \"${REDIS_PASSWORD}\" ping; else redis-cli ping; fi"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Zookeeper for Kafka (T016 - optional for local dev)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: iam-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    profiles:
      - kafka

  # Kafka service (T016 - optional for local dev)
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: iam-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.19.145:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    profiles:
      - kafka

  iam-dev:
    build:
      context: ../../
      dockerfile: build/Dockerfile
      target: dev
      network: host
    container_name: iam-dev
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - IAM_APP_ENV=development
      - IAM_JWT_KEY_DIRECTORY=/app/build/compose/secrets
    ports:
      - "8080:8080"
    volumes:
      - ./secrets:/app/build/compose/secrets:ro

volumes:
  postgres-data:
  redis-data:
